//============================== <헷갈림! equals를 통해 반환값 만들기>

class Person {
	long id;
	Person(long id) {
		this.id = id;
	}
	public boolean eqauls(Object obj) {//모든 값 가능
		if ((obj != null) && obj instanceof Person) {
			//뭔가 래퍼런싱 되어있으면서, 펄슨객체로 형변환될 수 있을 때
			Person p = (Person) obj; //타입 캐스팅
			return this.id == p.id;
		} else {
			return false;
		}
	}
}

public class Sample01_equals {

	public static void main(String[] args) {
		Person p = new Person(10);
		Person p2 = new Person(20);
		boolean check = p.eqauls(p2);
		System.out.println(check);
	}
}

//============================== <equals2>

class Employee {
	String name;
	int age;
	Employee(String name, int age){
		this.name = name;
		this.age = age;
	}
  
	public boolean equals(Object obj) {
		if ((obj != null) && obj instanceof Employee ) {
			Employee emp = (Employee) obj;
			return (this.name == emp.name && 
					this.age == emp.age);
		} else {
			return false;
		}
	}
}

public class Sample02 {

	public static void main(String[] args) {
		Employee employee = new Employee("홍길동", 30);
		Employee employee2 = new Employee("이순신", 40);
		System.out.println(employee.equals(employee2));
	}
}

//============================== <toString>

class Student {
	String name;
	int age;
	Student(String name, int age) {
		this.name = name;
		this.age = age;
	}
	public String toString() {
		String str = this.name + "," + this.age;
		return str;
	}
}

public class Sample03_toString {
	public static void main(String[] args) {
		Student student = new Student("김길동", 18);
		System.out.println(student);
	}
}

//============================== <헷갈림! getClass>
import java.lang.reflect.Method;

class MyClass {
	String name;
	void MyMethod() {};
}

public class Sample04_getClass {
	public static void main(String[] args) {
		MyClass obj = new MyClass();
		Class c = obj.getClass();
		System.out.println(c.getName()+","+c.getSimpleName());
		Method[] methods = c.getMethods();
		for(int inx = 0 ; inx < methods.length; inx++) {
			System.out.println(methods[inx].getName());
		}
	}
}

//============================== <String_class>
public class Sample05_String {

	public static void main(String[] args) {
		String msg1 = "안녕하세요, 반가워요.";
		char c1 = msg1.charAt(1);
		System.out.println(c1);
		
		String msg2 = "abcdefgABCD";
		char c2 = msg2.charAt(0);
		System.out.println(c2);
		char c3 = msg2.charAt(7);
		
		int n1 = (int)c2;
		int n2 = (int)c3;
		System.out.println(n1);
		System.out.println(n2);
		System.out.println(msg2.startsWith("ab"));
		System.out.println(msg2.endsWith("ab"));
		
		String msg3 = "  반가워요  ";
		System.out.println(msg3.length());
		System.out.println(msg3.trim().length());
		System.out.println(msg3.trim());
		
		int n3 = 1234;
		String msg4 = String.valueOf(n3);
		System.out.println(msg4 + 2);
		
		String msg5 = "ababc";
		String msg6 = msg5.replace("b","c");
		System.out.println(msg6);
		
		String tel = "010-1234-5678";
		String tel2 = tel.substring(4,8);
		String tel3 = tel.substring(4);
		System.out.println(tel2);
		System.out.println(tel3);
	}
}
//============================== <StringBuffer>
public class Sample06_StringBuffer {

	public static void main(String[] args) {
		String msg1 = "이순신";
		String msg2 = "강감찬";
		String msg3 = msg1 + msg2;
		System.out.println(msg3);
		
		StringBuffer sb = new StringBuffer("이순신");
		sb.append("강감찬");
		sb.insert(1, "세종대왕");
		System.out.println(sb.toString());
		sb.replace(1, 3, "안녕");
		System.out.println(sb.toString());
		sb.delete(1, 3);
		System.out.println(sb.toString());
		
		System.out.println(sb.capacity());	
	}
}

//============================== <wrapper>

public class Sample07_wrapper {

	public static void main(String[] args) {
		int a = 10;
		//boxing
		Integer i = Integer.valueOf(a);
		i.toString();
		i.hashCode();
		i.equals(10);
		Object o = i;
		o.getClass();
		System.out.println(i+11);
		System.out.println(i.toString()+11);
		
		Integer i2 = new Integer(100);
		System.out.println(i2.toString());
		
		//unboxing
		int c = i.intValue();
		System.out.println(c+11);
	}
}

//============================== <wrapper>

class CustomWrapperType {
	private int i;
	CustomWrapperType(int i){
		this.i = i;
	}
	public int getValue() {
		return this.i;
	}
	public void setValue(int i) {
		this.i = i;
	}
	public String toString() {
		return Integer.toString(i);
	}
}

public class Sample08 {

	public static void main(String[] args) {
		CustomWrapperType c = new CustomWrapperType(10);
		System.out.println(c);
		
		int a = 10;
		Object b = a;
		//autoboxing
		
		int x = (int)b;
		
		System.out.println(a);
		System.out.println(x);
	}
}

//============================== <collection>
import java.util.*;

public class Sample09_collection {

	public static void main(String[] args) {
		ArrayList al = new ArrayList();
//		List al2 = new ArrayList();
		al.add(100);
		al.add(200);
		al.add(300);
		
		for(int inx = 0 ; inx <al.size() ; inx ++) {
			int a = (int)al.get(inx);
			System.out.println(a);
		}
		Iterator itr = al.iterator();
		while(itr.hasNext()) {
			System.out.println(itr.next());
		}
		
		LinkedList ll = new LinkedList();
		ll.add(300);
		ll.add(400);
		ll.add(500);
		
		Iterator itr2 = ll.iterator();
		while(itr2.hasNext()) {
			System.out.println(itr2.next());
		}
	}
}

//========================= <ArrayList>
import java.util.*;

class Food{}
class ChinaFood extends Food {}
class KoreanFood extends Food{}

public class Sample10 {

	public static void main(String[] args) {
		Food[] foods = new Food[3];
		foods[0] = new Food();
		foods[1] = new ChinaFood();
		foods[2] = new KoreanFood();
		
		ArrayList al = new ArrayList();
		al.add(new Food());
		al.add(new ChinaFood());
		al.add(new KoreanFood());
		al.add(new Food());
		
		Iterator itr = al.iterator();
		while(itr.hasNext()) {
			System.out.println(itr.next());
		}
		
	}

}
